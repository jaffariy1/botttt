import disnake
from disnake.ext import commands, tasks
import youtube_dl
import random
import asyncio
import nacl

__TOKEN__ = 'MTIyOTQyMDQ1NTkzMzM3ODU3MA.GDJ2mT.sEwvDvWoB21aeq3YDaySpETDrOzl_MpL_-8WF4'
ffmpeglink = "F:\PycharmProjects\pythonProject1\pffmpeg\pin\pfmpeg.exe"
song_queue = []

tasker = None
intents = disnake.Intents.default()
intents.messages = True
intents.message_content = True
intents.guilds = True
intents.voice_states = True
bot = commands.Bot(command_prefix='.', intents=intents)
ffmpeg_options = {
    'before_options': '-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5',
    'options': '-vn',
}

ytdloptions = {
    'format': 'bestaudio/best',
    'restrictfilenames': True,
    'extractaudio': True,
    'audioformat': 'mp3',
    'noplaylist': True,
    'nocheckcertificate': True,
    'ignoreerrors': False,
    'logtostderr': False,
    'quiet': True,
    'no_warnings': True,
    'default_search': 'auto',
    'source_address': '0.0.0.0'
}
ytdl = youtube_dl.YoutubeDL(ytdloptions)

class plvid(disnake.PCMVolumeTransformer):
    def __init__(self, source, *, data, volume=0.5):
        super().__init__(source, volume)
        self.data = data
        self.title = data.get('title')
        self.duration = data.get('duration')
        self.url = data.get('webpage_url')
        self.thumbnail = data.get('thumbnail')
        self.url = ""

    @classmethod
    async def from_url(cls, url, *, loop=None, stream=False, play=False):
        loop = loop or asyncio.get_event_loop()
        data = await loop.run_in_executor(None,
                                          lambda: ytdl.extract_info(f"ytsearch:{url}", download=not stream or play))
        if 'entries' in data:
            data = data['entries'][0]
        filename = data['url'] if stream else ytdl.prepare_filename(data)
        return cls(disnake.FFmpegPCMAudio(filename, executable=ffmpeglink), data=data)


@bot.event
async def on_ready():
    print(f'Logged in as {bot.user} (ID: {bot.user.id})')


@bot.command(name='play', aliases=['p', 'play_song'], help='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É, —á—Ç–æ–±—ã –ø—Ä–æ–∏–≥—Ä–∞—Ç—å –ø–µ—Å–Ω—é –ø–æ —Å—Å—ã–ª–∫–µ.')
async def play(ctx: commands.Context, *, url: str):
    global song_queue
    voice = disnake.utils.get(bot.voice_clients, guild=ctx.guild)

    if voice is None and not ctx.author.voice:
        embed = disnake.Embed(title="üö´ –û—à–∏–±–∫–∞",
                              description="‚ö†Ô∏è –í—ã –Ω–µ –≤ –≤–æ–π—Å-–∫–∞–Ω–∞–ª–µ.",
                              color=0xff0000)
        await ctx.send(embed=embed)
        return

    if voice is None:
        channel = ctx.author.voice.channel
        await channel.connect()
        voice = disnake.utils.get(bot.voice_clients, guild=ctx.guild)

    async with ctx.typing():
        try:
            player = await plvid.from_url(url, loop=bot.loop, stream=True)
            if not voice.is_playing():
                song_queue.append(player)
                await start_playing(ctx, voice, song_queue)
                embed = disnake.Embed(title="üé∂ –°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç",
                                      description=f"üéµ {player.title}",
                                      color=0x00ff00)
                embed.set_thumbnail(url=player.thumbnail)
                await ctx.send(embed=embed)
            else:
                song_queue.append(player)
                embed = disnake.Embed(title="üéµ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å",
                                      description=f"{player.title}",
                                      color=0x00ff00)
                embed.set_thumbnail(url=player.thumbnail)
                await ctx.send(embed=embed)
        except Exception as e:
            embed = disnake.Embed(title="üö´ –û—à–∏–±–∫–∞",
                                  description=f"‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}",
                                  color=0xff0000)
            await ctx.send(embed=embed)


async def start_playing(ctx, voice, song_queue):
    while song_queue:
        player = song_queue.pop(0)
        voice.play(player, after=lambda e: start_playing(ctx, voice, song_queue) if song_queue else None)
        embed = disnake.Embed(title="üéµ –°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç",
                              description=f"üé∂ {player.title}",
                              color=0x1DB954)
        embed.set_thumbnail(url=player.thumbnail)
        await ctx.send(embed=embed)
        while voice.is_playing() or voice.is_paused():
            await asyncio.sleep(1)



@bot.command(name='now_playing', aliases=['np'], help='–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ–º—ã–π —Ç—Ä–µ–∫.')
async def now_playing(ctx: commands.Context):
    if song_queue:
        player = song_queue[0]
        embed = disnake.Embed(title="üé∂ –°–µ–π—á–∞—Å –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è",
                              description=f"{player.title}",
                              color=0x1DB954)
        embed.set_thumbnail(url=player.thumbnail)
    else:
        embed = disnake.Embed(title="üé∂ –°–µ–π—á–∞—Å –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ—Ç—Å—è",
                              description="–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç.",
                              color=0xff0000)
    await ctx.send(embed=embed)


@bot.command(name='repeat', help='–ü–æ–≤—Ç–æ—Ä—è–µ—Ç —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫.')
async def repeat(ctx: commands.Context):
    voice_client = ctx.guild.voice_client
    if voice_client and voice_client.is_playing() and song_queue:
        song_queue.insert(0, song_queue[0])
        embed = disnake.Embed(title="üîÇ –ü–æ–≤—Ç–æ—Ä —Ç—Ä–µ–∫–∞",
                              description=f"–¢—Ä–µ–∫ {song_queue[0].title} –±—É–¥–µ—Ç –ø–æ–≤—Ç–æ—Ä—ë–Ω.",
                              color=0x1DB954)
        embed.set_thumbnail(url=song_queue[0].thumbnail)
    else:
        embed = disnake.Embed(title="üîÇ –ü–æ–≤—Ç–æ—Ä —Ç—Ä–µ–∫–∞",
                              description="–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç —Ç—Ä–µ–∫–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è.",
                              color=0xff0000)
    await ctx.send(embed=embed)


@bot.command(name='leave', aliases=['l', 'exit'], help='–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç—É –∫–æ–º–∞–Ω–¥—É, —á—Ç–æ–±—ã –∑–∞—Å—Ç–∞–≤–∏—Ç—å –±–æ—Ç–∞ –≤—ã–π—Ç–∏ –∏–∑ '
                                                       '–≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞.')
async def leave(ctx: commands.Context):
    title_leave = "üé∂ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ..."
    descr_leave = "–ü—Ä–æ—Ü–µ—Å—Å –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –∑–∞–ø—É—â–µ–Ω."
    descr_not_connected = "‚ö†Ô∏è –ë–æ—Ç –Ω–µ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ, –Ω–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏."
    color_success = 0x1DB954
    color_warning = 0xFF0000
    embed = disnake.Embed(title=title_leave,
                          description=descr_leave,
                          color=color_success)
    voice_client = ctx.guild.voice_client
    if voice_client and voice_client.is_connected():
        await voice_client.disconnect()
        embed.description = f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–∫–ª—é—á—ë–Ω –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞."
    else:
        embed.description = descr_not_connected
        embed.color = color_warning
    await ctx.send(embed=embed)


@bot.command(name='pause', help='–ü–æ—Å—Ç–∞–≤–∏—Ç—å —Ç–µ–∫—É—â—É—é –ø–µ—Å–Ω—é –Ω–∞ –ø–∞—É–∑—É.')
async def pause(ctx: commands.Context):
    voice_client = ctx.guild.voice_client
    if voice_client and voice_client.is_playing():
        embed = disnake.Embed(title="‚è∏Ô∏è –ü–∞—É–∑–∞",
                              description="üéµ –ú—É–∑—ã–∫–∞ –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.",
                              color=0x1DB954)
        voice_client.pause()
    else:
        embed = disnake.Embed(title="üö´ –û—à–∏–±–∫–∞",
                              description="üîá –ú—É–∑—ã–∫–∞ –Ω–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è.",
                              color=0xff0000)
    await ctx.send(embed=embed)


@bot.command(name='resume', help='–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø–µ—Å–Ω–∏ –ø–æ—Å–ª–µ –ø–∞—É–∑—ã.')
async def resume(ctx: commands.Context):
    voice_client = ctx.guild.voice_client
    if voice_client and voice_client.is_paused():
        embed = disnake.Embed(title="‚ñ∂Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ",
                              description="üé∂ –ú—É–∑—ã–∫–∞ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∞.",
                              color=0x1DB954)
        voice_client.resume()
    else:
        embed = disnake.Embed(title="üö´ –û—à–∏–±–∫–∞",
                              description="üîá –ù–µ—Ç –º—É–∑—ã–∫–∏ –Ω–∞ –ø–∞—É–∑–µ.",
                              color=0xff0000)
    await ctx.send(embed=embed)


@bot.command(name='stop', help='–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –º—É–∑—ã–∫–∏ –∏ –æ—á–∏—Å—Ç–∏—Ç—å –æ—á–µ—Ä–µ–¥—å.')
async def stop(ctx: commands.Context):
    global song_queue
    voice_client = ctx.guild.voice_client
    if voice_client and voice_client.is_playing():
        embed = disnake.Embed(title="‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞",
                              description="üéµ –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏ –æ—á–µ—Ä–µ–¥—å —Ç—Ä–µ–∫–æ–≤ –æ—á–∏—â–µ–Ω—ã.",
                              color=0x1DB954)
        song_queue.clear()
        voice_client.stop()
    else:
        embed = disnake.Embed(title="üö´ –û—à–∏–±–∫–∞",
                              description="üîá –ù–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –Ω–∏–∫–∞–∫–∞—è –º—É–∑—ã–∫–∞.",
                              color=0xff0000)
    await ctx.send(embed=embed)


@bot.command(name='skip', help='–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â–∏–π —Ç—Ä–µ–∫ –∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤ –æ—á–µ—Ä–µ–¥–∏.')
async def skip(ctx: commands.Context):
    voice_client = ctx.guild.voice_client
    if voice_client and voice_client.is_playing():
        voice_client.stop()
        if song_queue:
            song_queue.pop(0)
        embed = disnake.Embed(title="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫",
                              description="üé∂ –¢—Ä–µ–∫ –ø—Ä–æ–ø—É—â–µ–Ω. –ü–µ—Ä–µ—Ö–æ–∂—É –∫ —Å–ª–µ–¥—É—é—â–µ–º—É...",
                              color=0x1DB954)
    else:
        embed = disnake.Embed(title="üö´ –û—à–∏–±–∫–∞",
                              description="üîá –ù–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –Ω–∏–∫–∞–∫–∞—è –º—É–∑—ã–∫–∞.",
                              color=0xff0000)
    await ctx.send(embed=embed)


@bot.command(name='queued', aliases=['q', 'list'], help='–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Ç—Ä–µ–∫–∏ –≤ –æ—á–µ—Ä–µ–¥–∏.')
async def queued(ctx: commands.Context):
    embed = disnake.Embed(title="üìú –û—á–µ—Ä–µ–¥—å —Ç—Ä–µ–∫–æ–≤",
                          color=0x1DB954)
    if song_queue:
        embed.description = "\n".join(f"**#{i}.** {player.title}" for i, player in enumerate(song_queue, start=1))
    else:
        embed.description = "üîá –í –æ—á–µ—Ä–µ–¥–∏ –Ω–µ—Ç —Ç—Ä–µ–∫–æ–≤."
    await ctx.send(embed=embed)


@bot.command(name='shuffle', help='–ü–µ—Ä–µ–º–µ—à–∞—Ç—å —Ç—Ä–µ–∫–∏ –≤ –æ—á–µ—Ä–µ–¥–∏.')
async def shuffle(ctx: commands.Context):
    global song_queue
    if len(song_queue) > 1:
        random.shuffle(song_queue)
        embed = disnake.Embed(title="üîÄ –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏–µ",
                              description="–û—á–µ—Ä–µ–¥—å —Ç—Ä–µ–∫–æ–≤ –±—ã–ª–∞ –ø–µ—Ä–µ–º–µ—à–∞–Ω–∞.",
                              color=0x1DB954)
    else:
        embed = disnake.Embed(title="üö´ –û—à–∏–±–∫–∞",
                              description="üîá –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç—Ä–µ–∫–æ–≤ –≤ –æ—á–µ—Ä–µ–¥–∏ –¥–ª—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è.",
                              color=0xff0000)
    await ctx.send(embed=embed)


@bot.command(name='search', help='–ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º.')
async def search(ctx: commands.Context, *, search_query: str):
    search_results = await plvid.from_url(search_query, loop=bot.loop, stream=True, play=False)
    if 'entries' in search_results and search_results['entries']:
        description = "\n".join(f"**#{i+1}.** {entry['title']}" for i, entry in enumerate(search_results['entries'], start=1))
        embed = disnake.Embed(title="üîé –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ü–æ–∏—Å–∫–∞",
                              description=description,
                              color=0x1DB954)
    else:
        embed = disnake.Embed(title="üîé –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ü–æ–∏—Å–∫–∞",
                              description="–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–µ –¥–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.",
                              color=0xff0000)
    await ctx.send(embed=embed)

bot.run(__TOKEN__)
